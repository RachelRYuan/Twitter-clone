{"ast":null,"code":"var _jsxFileName = \"/Users/ruiyuan/Desktop/twitter-clone/web/src/pages/Login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst login_MUTATION = gql`\nmutation login( $email: String!, $password: String!){\n    login( email: $email, password: $password) {\n        token\n    }\n} \n`;\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [login, {\n    data\n  }] = useMutation(login_MUTATION);\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email address\").required(\"Email Required\"),\n    password: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Password Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: async (values, {\n        setSubmitting\n      }) => {\n        setSubmitting(true);\n        const response = await login({\n          variables: values\n        });\n        localStorage.setItem(\"token\", response.data.login.token);\n        setSubmitting(false);\n        navigate('/users');\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          type: \"text\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Login \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Bh3ajTQ8ST+eRtHzkg0GS3NbLJw=\", false, function () {\n  return [useNavigate, useMutation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","gql","useMutation","ErrorMessage","Field","Form","Formik","Yup","useNavigate","jsxDEV","_jsxDEV","login_MUTATION","Login","_s","navigate","login","data","initialValues","email","password","validationSchema","object","string","required","max","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","values","setSubmitting","response","variables","localStorage","setItem","token","name","type","placeholder","component","_c","$RefreshReg$"],"sources":["/Users/ruiyuan/Desktop/twitter-clone/web/src/pages/Login.tsx"],"sourcesContent":["import React from 'react'\nimport { gql,useMutation } from '@apollo/client'\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { useNavigate} from 'react-router-dom'\nimport { isValidInputTimeValue } from '@testing-library/user-event/dist/utils'\n\nconst login_MUTATION = gql`\nmutation login( $email: String!, $password: String!){\n    login( email: $email, password: $password) {\n        token\n    }\n} \n`\ninterface LoginValues{\n  email: string\n  password: string\n}\n\n\nfunction Login() {\n  const navigate = useNavigate()\n  const [login, {data}] = useMutation(login_MUTATION)\n\n  const initialValues: LoginValues = {\n    email: '',\n    password: '',\n  }\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Email Required\"),\n  password: Yup.string()\n    .max(20, \"Must be 20 characters or less\")\n    .required(\"Password Required\"),\n})\n\n  return (\n    <div>\n      <h1> Login </h1>\n      <Formik\n      initialValues = {initialValues}\n      validationSchema = {validationSchema}\n      onSubmit = {async(values, {setSubmitting}) =>{\n        setSubmitting(true)\n        const response = await login({\n            variables: values\n        })\n        localStorage.setItem(\"token\", response.data.login.token)\n        setSubmitting(false)\n        navigate('/users')\n      }}\n    >\n        <Form>\n          <Field name = \"email\" type = \"text\" placeholder = \"Email\"/>\n          <ErrorMessage name = \"email\" component = {\"div\"} />\n          <Field name = \"password\" type = \"text\" placeholder = \"Password\"/>\n          <ErrorMessage name = \"password\" component = {\"div\"} />\n          <button type = 'submit'> Login </button>\n        </Form>\n\n    </Formik>\n    </div>\n  )\n}\n\nexport default Login"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}